from django.urls import path # Обязательный импорт функции path
from . import views # из папки приложения blog импортируется попка views

urlpatterns = [ # Переменная urlpatterns содержит в себе список функций path. Функция path - "Путь/след" отвечает за то какая функция представления будет отрабаотывать по какому url путм, принимает в себя имя url адреса, путь к функции представления и иные необязательные аргументы, например name
    path('', views.blog1, name='blog0'), # первая функция path. Содержит нулевое имя url адреса (" " - пустая строка). Это значит что попадае в приложение blog пользователь автоматически попадет на страничку с этим путём. Главная страница приложения blog. (адрес: htts:blog/) Функция представления - views.blog1 т.е. blog1 из папки views.py. Так же задана атрибут name="blog0", определяющий имя url адреса по которому на него будут ссылаться в шаблонах
    path('blog2/', views.education, name='university'), # Вторая функция path. Содержит имя url адреса - blog2. Т.е. полный адрес страницы будет https:blog/blog2. Вторым аргументом передан путь к функции представления education файла views.py (views.education), третьим аргументом задано имя маршрута name='university'
    path('blog2/<int:pk>/', views.education_detail, name='university_detail'), # Третья функция path, содержит имя пути (адреса) blog2/<int:pk>/ с параметром pk, который отлавливается и затем передаётся в функцию представления, чтобы выбирать данные только по определенному посту, а не всей базе данных. Вторым аргументом передан путь (ссылка) к функции представления файла views.py, взаимодействующей с данным url адресом. В данном случае это функция education_detail из views.py, Третьим аргументом передано имя, ко которому можно будет ссылаться на данную функцию path в html шаблонах
    path('blog3/', views.experience, name='experience'), # Четвертая функция path, содержит имя url адреса - 'blog3/', Путь к функции представления experience файла views.py (views.experience). Третьим аргументом задано имя данного url адреса по которому на него можно будет ссылаться в html шаблонах.
    path('blog3/<int:pk>/', views.experience_detail, name='experience_detail'), # Пятая функция path, содержит имя пути (адреса) blog3/<int:pk>/ с параметром pk, который отлавливается и затем передаётся в функцию представления, чтобы выбирать данные только по определенному посту, а не всей базе данных. Вторым аргументом передан путь (ссылка) к функции представления файла views.py, взаимодействующей с данным url адресом. В данном случае это функция experience_detail из views.py, Третьим аргументом передано имя, ко которому можно будет ссылаться на данную функцию path в html шаблонах
    path('blog4/', views.profscills, name='profscills'), # Шестая функция path, содержит имя url адреса - 'blog4/', Путь к функции представления profscills файла views.py (views.profscills). Третьим аргументом задано имя данного url адреса по которому на него можно будет ссылаться в html шаблонах.
    path('blog5/', views.personalscills, name='personalscills'), # седьмая функция path, содержит имя url адреса - 'blog5/', Путь к функции представления personalscills файла views.py (views.personalscills). Третьим аргументом задано имя данного url адреса по которому на него можно будет ссылаться в html шаблонах.
    path('blog6/', views.personalinfo, name='personalinfo'), #восьмая функци path, содержит имя url адреса - "blog6/", ссылку на функцию представления personalinfo файла views.py (personalinfo.views), третьим аргументом задано имя url адреса по которому на него можно будет ссылаться из шаблонов
]
